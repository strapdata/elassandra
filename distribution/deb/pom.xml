<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.strapdata.elasticsearch.distribution</groupId>
        <artifactId>distributions</artifactId>
        <version>2.4.2</version>
    </parent>

    <groupId>com.strapdata.elasticsearch.distribution.deb</groupId>
    <artifactId>elasticsearch</artifactId>
    <name>Distribution: Deb</name>
    <!-- We should use deb packaging here because we don't want to publish any
        jar. But if you do this, then maven lifecycle does not execute any test (nor
        compile any test) -->
    <!--packaging>deb</packaging -->
    <description>The Debian distribution of Elassandra</description>

    <properties>
        <deb.sign.method>dpkg-sig</deb.sign.method>
    </properties>
    <build>
        <filters>
            <filter>${project.basedir}/src/main/packaging/packaging.properties</filter>
        </filters>

        <plugins>
            <!-- bundle modules -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-modules</id>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <!-- Filters some files and uses packaging.properties when building
                        the .deb package -->
                    <execution>
                        <id>copy-resources-deb</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-packaging/deb/</outputDirectory>
                            <filters>
                                <filter>${project.basedir}/../src/main/packaging/packaging.properties</filter>
                                <filter>${project.basedir}/src/main/packaging/packaging.properties</filter>
                            </filters>
                            <overwrite>true</overwrite>
                            <resources>
                              <resource>
                                  <directory>${project.basedir}/../../core/cassandra</directory>
                                  <includes>
                                      <include>bin/cqlsh.py</include>
                                      <include>bin/cqlsh</include>
                                      <include>bin/nodetool</include>
                                  </includes>
                              </resource>
                              <resource>
                                  <directory>${project.basedir}/../../core/cassandra</directory>
                                  <excludes>
                                      <exclude>conf/cassandra-env.ps1</exclude>
                                      <exclude>conf/cassandra.yaml</exclude>
                                  </excludes>
                                  <includes>
                                      <include>conf/**/*</include>
                                  </includes>
                              </resource>
                              <resource>
                                  <directory>${project.basedir}/../../core/cassandra</directory>
                                  <includes>
                                      <include>lib/jsr223/*/**</include>
                                      <include>lib/licenses/*</include>
                                      <include>lib/sigar-bin/*</include>
                                  </includes>
                              </resource>
                              <resource>
                                  <directory>${project.basedir}/../src/main/packaging/</directory>
                                  <filtering>true</filtering>
                                  <includes>
                                      <include>**/*</include>
                                  </includes>
                                  <excludes>
                                      <exclude>packaging.properties</exclude>
                                  </excludes>
                              </resource>
                              <resource>
                                  <directory>${project.basedir}/src/main/packaging/</directory>
                                  <filtering>true</filtering>
                                  <includes>
                                      <include>**/*</include>
                                  </includes>
                                  <excludes>
                                      <exclude>packaging.properties</exclude>
                                  </excludes>
                              </resource>
                              <resource>
                                  <directory>${project.basedir}/../src/main/resources</directory>
                                  <filtering>true</filtering>
                                  <includes>
                                      <include>bin/cassandra</include>
                                      <include>bin/plugin</include>
                                      <include>bin/aliases.sh</include>
                                      <include>conf/cassandra.yaml</include>
                                      <include>conf/cassandra-rackdc.properties</include>
                                      <include>conf/cassandra-topology.properties</include>
                                      <include>conf/elasticsearch.yml</include>
                                      <include>conf/logback.xml</include>
                                      <include>conf/triggers/README.txt</include>
                                  </includes>
                              </resource>
                              <resource>
                                  <directory>${project.basedir}/src/main/resources</directory>
                                  <filtering>true</filtering>
                                  <includes>
                                      <include>bin/cassandra.in.sh</include>
                                  </includes>
                              </resource>
                          </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- some infos https://github.com/tcurdt/jdeb/blob/master/docs/maven.md -->
                <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <configuration>
                    <!-- By default it should generates target/${artifactId}_${version}.deb
                        but we get elasticsearch_2.0.0~SNAPSHOT_all.deb -->
                    <deb>${project.build.directory}/releases/elassandra_${elasticsearch.version}.${elassandra.version}-1_all.deb</deb>
                    <snapshotExpand>true</snapshotExpand>
                    <snapshotEnv></snapshotEnv>
                    <controlDir>${project.build.directory}/generated-packaging/deb/scripts</controlDir>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <!-- <signPackage>${deb.sign}</signPackage>
                            <keyring>${gpg.keyring}</keyring>
                            <key>${gpg.key}</key>
                            <passphrase>${gpg.passphrase}</passphrase>
                            <signMethod>${deb.sign.method}</signMethod> -->
                            <dataSet>
                                <!-- Add bin directory -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/bin</src>
                                    <type>directory</type>
                                    <includes>plugin,nodetool,cqlsh,cqlsh.py</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${packaging.elassandra.bin.dir}</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- Add sbin directory -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/bin</src>
                                    <type>directory</type>
                                    <includes>cassandra</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${packaging.elassandra.sbin.dir}</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- Add cassandra.in.sh -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/bin</src>
                                    <type>directory</type>
                                    <includes>cassandra.in.sh</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${packaging.elassandra.home.dir}</prefix>
                                        <filemode>644</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- create the conf dir manually so it gets proper permissions -->
                                <data>
                                    <type>template</type>
                                    <paths>
                                        <path>${packaging.elassandra.conf.dir}</path>
                                    </paths>
                                    <mapper>
                                        <type>perm</type>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- Add configuration files -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/conf</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <includes>**/*</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${packaging.elassandra.conf.dir}</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- Add environment vars file -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/env/cassandra</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/default</prefix>
                                        <filemode>644</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>

                                <!-- Add libs -->
                                <data>
                                    <src>${project.build.directory}/lib</src>
                                    <type>directory</type>
                                    <excludes>${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${packaging.elassandra.home.dir}/lib</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/lib</src>
                                    <type>directory</type>
                                    <includes>**/*</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${packaging.elassandra.home.dir}/lib</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- Add modules -->
                                <data>
                                    <src>${project.build.directory}/modules</src>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${packaging.elassandra.home.dir}/modules</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- Add init.d files -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/init.d/</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/init.d</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!--  add limits.d file -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/limits.d/</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/security/limits.d</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- Adds systemd service file  -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/systemd/cassandra.service</src>
                                    <dst>${packaging.elassandra.systemd.dir}/cassandra.service</dst>
                                    <type>file</type>
                                </data>
                                <!-- Adds systemd/sysctl.d configuration file -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/systemd/sysctl/cassandra.conf</src>
                                    <dst>${packaging.elassandra.systemd.sysctl.dir}/cassandra.conf</dst>
                                    <type>file</type>
                                </data>
                                <!-- Adds systemd/tmpfiles.d configuration file -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/systemd/cassandra.conf</src>
                                    <dst>${packaging.elassandra.tmpfilesd.dir}/cassandra.conf</dst>
                                    <type>file</type>
                                </data>
                                <!-- Add readme files -->
                                <data>
                                    <src>${project.basedir}/../src/main/resources/</src>
                                    <includes>LICENSE.txt, NOTICE.txt, README.md</includes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${packaging.elassandra.home.dir}</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <!-- Add license files -->
                                <data>
                                    <src>${project.build.directory}/generated-packaging/deb/copyright</src>
                                    <dst>/usr/share/doc/elassandra/copyright</dst>
                                    <type>file</type>
                                </data>
                                <!-- Adds and sets permission on default directories -->
                                <data>
                                    <type>template</type>
                                    <paths>
                                        <path>${packaging.elassandra.data.dir}</path>
                                        <path>${packaging.elassandra.log.dir}</path>
                                        <path>${packaging.elassandra.plugins.dir}</path>
                                        <path>${packaging.elassandra.pid.dir}</path>
                                    </paths>
                                    <mapper>
                                        <type>perm</type>
                                        <dirmode>755</dirmode>
                                        <user>${packaging.elassandra.user}</user>
                                        <group>${packaging.elassandra.group}</group>
                                    </mapper>
                                </data>
                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- <plugin> -->
            <!-- <groupId>org.apache.maven.plugins</groupId> -->
            <!-- <artifactId>maven-antrun-plugin</artifactId> -->
            <!-- <executions> -->
            <!-- <execution> -->
            <!-- <id>shorten-gpg-key-path</id> -->
            <!-- <phase>prepare-package</phase> -->
            <!-- <goals> -->
            <!-- <goal>run</goal> -->
            <!-- </goals> -->
            <!-- <configuration> -->
            <!-- <target> -->
            <!-- <ant antfile="${packaging.gpg.shortening.ant.script}"/> -->
            <!-- </target> -->
            <!-- </configuration> -->
            <!-- </execution> -->
            <!-- start up external cluster -->
            <!-- <execution> -->
            <!-- <id>integ-setup</id> -->
            <!-- <phase>pre-integration-test</phase> -->
            <!-- <goals> -->
            <!-- <goal>run</goal> -->
            <!-- </goals> -->
            <!-- <configuration> -->
            <!-- <skip>${skip.integ.tests}</skip> -->
            <!-- <target> -->
            <!-- <ant antfile="${elasticsearch.integ.antfile}" target="start-external-cluster-deb"> -->
            <!-- <property name="tests.jvm.argline" value="${tests.jvm.argline}"/> -->
            <!-- </ant> -->
            <!-- </target> -->
            <!-- </configuration> -->
            <!-- </execution> -->
            <!-- shut down external cluster -->
            <!-- <execution> -->
            <!-- <id>integ-teardown</id> -->
            <!-- <phase>post-integration-test</phase> -->
            <!-- <goals> -->
            <!-- <goal>run</goal> -->
            <!-- </goals> -->
            <!-- <configuration> -->
            <!-- <skip>${skip.integ.tests}</skip> -->
            <!-- <target> -->
            <!-- <ant antfile="${elasticsearch.integ.antfile}" target="stop-external-cluster"/> -->
            <!-- </target> -->
            <!-- </configuration> -->
            <!-- </execution> -->
            <!-- </executions> -->
            <!-- </plugin> -->
        </plugins>
    </build>

    <profiles>
        <!-- we run integration test with real dpkg utils, you must have them -->
        <profile>
            <id>has_dpkg</id>
            <activation>
                <file>
                    <missing>/usr/bin/dpkg-deb</missing>
                </file>
            </activation>
            <properties>
                <skip.integ.tests>true</skip.integ.tests>
            </properties>
        </profile>
    </profiles>
</project>
